// Generated by CIRCT firtool-1.62.1
module SevSegDisplay_core(
  input                                                               clock,
                                                                      reset,
  input  [4:0]                                                        slot_io_address,
  output [31:0]                                                       slot_io_rd_data,
  input  [31:0]                                                       slot_io_wr_data,
  input                                                               slot_io_read,
                                                                      slot_io_write,
                                                                      slot_io_cs,
  output struct packed {logic [7:0] anode_select; logic [6:0] segs; } io
);

  wire [7:0]  _seg7_io_anode_select;
  wire [6:0]  _seg7_io_segs;
  reg  [31:0] config_reg;
  wire        _GEN = slot_io_address == 5'h0;
  reg  [31:0] display_data;
  wire        _GEN_0 = slot_io_address == 5'h1;
  always @(posedge clock) begin
    if (reset) begin
      config_reg <= 32'h0;
      display_data <= 32'h0;
    end
    else begin
      automatic logic wr_en = slot_io_write & slot_io_cs;
      if (_GEN & wr_en)
        config_reg <= slot_io_wr_data;
      if (_GEN_0 & wr_en)
        display_data <= slot_io_wr_data;
    end
  end // always @(posedge)
  SevSegDisplay seg7 (
    .clock           (clock),
    .reset           (reset),
    .io_enable_7seg  (config_reg[0]),
    .io_display_data (display_data),
    .io_anode_select (_seg7_io_anode_select),
    .io_segs         (_seg7_io_segs)
  );
  assign slot_io_rd_data = _GEN_0 ? display_data : _GEN ? config_reg : 32'h0;
  assign io = '{anode_select: _seg7_io_anode_select, segs: _seg7_io_segs};
endmodule

